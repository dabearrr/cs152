Grammar

    0 $accept: start_here $end

    1 start_here: program

    2 program: %empty
    3        | function program

    4 $@1: %empty

    5 $@2: %empty

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    7 declaration_s: %empty
    8              | declaration SEMICOLON declaration_s

    9 statement_ns: %empty
   10             | statement SEMICOLON statement_ns

   11 declaration: IDENT identifier_ns COLON INTEGER
   12            | IDENT identifier_ns COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   13 identifier_ns: COMMA IDENT identifier_ns
   14              | %empty

   15 statement: var ASSIGN expression

   16 $@3: %empty

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_ns else_ns ENDIF

   18 $@4: %empty

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON statement_ns ENDLOOP

   20 $@5: %empty

   21 $@6: %empty

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON statement_ns ENDLOOP WHILE $@6 bool_expr
   23          | FOREACH IDENT IN IDENT BEGINLOOP statement SEMICOLON statement_ns ENDLOOP
   24          | READ var var_ns
   25          | WRITE var var_ns
   26          | CONTINUE
   27          | RETURN expression

   28 var: IDENT
   29    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   30 else_ns: %empty

   31 $@7: %empty

   32 else_ns: ELSE $@7 statement SEMICOLON statement_ns

   33 var_ns: %empty
   34       | COMMA var var_ns

   35 bool_expr: bool_expr OR relation_and_expr
   36          | relation_and_expr

   37 relation_and_expr: relation_and_expr AND relation_expr
   38                  | relation_expr

   39 relation_expr: rexpr
   40              | NOT rexpr

   41 rexpr: expression comp expression
   42      | TRUE
   43      | FALSE
   44      | L_PAREN bool_expr R_PAREN

   45 comp: EQ
   46     | NEQ
   47     | LT
   48     | GT
   49     | LTE
   50     | GTE

   51 expression: expression ADD multiplicative_expr
   52           | expression SUB multiplicative_expr
   53           | multiplicative_expr

   54 multiplicative_expr: multiplicative_expr MULT term
   55                    | multiplicative_expr DIV term
   56                    | multiplicative_expr MOD term
   57                    | term

   58 term: SUB var
   59     | var
   60     | SUB NUMBER
   61     | NUMBER
   62     | SUB L_PAREN expression R_PAREN
   63     | L_PAREN expression R_PAREN
   64     | IDENT L_PAREN expression exp_s R_PAREN
   65     | IDENT L_PAREN R_PAREN

   66 exp_s: COMMA expression exp_s
   67      | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 6
BEGIN_PARAMS (259) 6
END_PARAMS (260) 6
BEGIN_LOCALS (261) 6
END_LOCALS (262) 6
BEGIN_BODY (263) 6
END_BODY (264) 6
INTEGER (265) 11 12
ARRAY (266) 12
OF (267) 12
IF (268) 17
THEN (269) 17
ENDIF (270) 17
ELSE (271) 32
WHILE (272) 19 22
DO (273) 22
FOREACH (274) 23
IN (275) 23
BEGINLOOP (276) 19 22 23
ENDLOOP (277) 19 22 23
CONTINUE (278) 26
READ (279) 24
WRITE (280) 25
TRUE (281) 42
FALSE (282) 43
SEMICOLON (283) 6 8 10 17 19 22 23 32
COLON (284) 11 12
COMMA (285) 13 34 66
ASSIGN (286) 15
RETURN (287) 27
AND (288) 37
OR (289) 35
L_PAREN (290) 44 62 63 64 65
R_PAREN (291) 44 62 63 64 65
L_SQUARE_BRACKET (292) 12 29
R_SQUARE_BRACKET (293) 12 29
MULT (294) 54
DIV (295) 55
MOD (296) 56
ADD (297) 51
SUB (298) 52 58 60 62
LT (299) 47
LTE (300) 49
GT (301) 48
GTE (302) 50
EQ (303) 45
NEQ (304) 46
NOT (305) 40
NUMBER (306) 12 60 61
IDENT (307) 6 11 12 13 23 28 29 64 65


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
start_here (54)
    on left: 1, on right: 0
program (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 6, on right: 3
$@1 (57)
    on left: 4, on right: 6
$@2 (58)
    on left: 5, on right: 6
declaration_s (59)
    on left: 7 8, on right: 6 8
statement_ns (60)
    on left: 9 10, on right: 6 10 17 19 22 23 32
declaration (61)
    on left: 11 12, on right: 8
identifier_ns (62)
    on left: 13 14, on right: 11 12 13
statement (63)
    on left: 15 17 19 22 23 24 25 26 27, on right: 10 17 19 22 23 32
$@3 (64)
    on left: 16, on right: 17
$@4 (65)
    on left: 18, on right: 19
$@5 (66)
    on left: 20, on right: 22
$@6 (67)
    on left: 21, on right: 22
var (68)
    on left: 28 29, on right: 15 24 25 34 58 59
else_ns (69)
    on left: 30 32, on right: 17
$@7 (70)
    on left: 31, on right: 32
var_ns (71)
    on left: 33 34, on right: 24 25 34
bool_expr (72)
    on left: 35 36, on right: 17 19 22 35 44
relation_and_expr (73)
    on left: 37 38, on right: 35 36 37
relation_expr (74)
    on left: 39 40, on right: 37 38
rexpr (75)
    on left: 41 42 43 44, on right: 39 40
comp (76)
    on left: 45 46 47 48 49 50, on right: 41
expression (77)
    on left: 51 52 53, on right: 15 27 29 41 51 52 62 63 64 66
multiplicative_expr (78)
    on left: 54 55 56 57, on right: 51 52 53 54 55 56
term (79)
    on left: 58 59 60 61 62 63 64 65, on right: 54 55 56 57
exp_s (80)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . start_here $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    start_here  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    6 function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: start_here . $end

    $end  shift, and go to state 6


State 3

    1 start_here: program .

    $default  reduce using rule 1 (start_here)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    6 function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: start_here $end .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    6 function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    SEMICOLON  shift, and go to state 9


State 9

    6 function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declaration_s)

    declaration_s  go to state 12
    declaration    go to state 13


State 11

   11 declaration: IDENT . identifier_ns COLON INTEGER
   12            | IDENT . identifier_ns COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 14

    $default  reduce using rule 14 (identifier_ns)

    identifier_ns  go to state 15


State 12

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s . $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    $default  reduce using rule 5 ($@2)

    $@2  go to state 16


State 13

    8 declaration_s: declaration . SEMICOLON declaration_s

    SEMICOLON  shift, and go to state 17


State 14

   13 identifier_ns: COMMA . IDENT identifier_ns

    IDENT  shift, and go to state 18


State 15

   11 declaration: IDENT identifier_ns . COLON INTEGER
   12            | IDENT identifier_ns . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 . END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    END_PARAMS  shift, and go to state 20


State 17

    8 declaration_s: declaration SEMICOLON . declaration_s

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declaration_s)

    declaration_s  go to state 21
    declaration    go to state 13


State 18

   13 identifier_ns: COMMA IDENT . identifier_ns

    COMMA  shift, and go to state 14

    $default  reduce using rule 14 (identifier_ns)

    identifier_ns  go to state 22


State 19

   11 declaration: IDENT identifier_ns COLON . INTEGER
   12            | IDENT identifier_ns COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS . BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 21

    8 declaration_s: declaration SEMICOLON declaration_s .

    $default  reduce using rule 8 (declaration_s)


State 22

   13 identifier_ns: COMMA IDENT identifier_ns .

    $default  reduce using rule 13 (identifier_ns)


State 23

   11 declaration: IDENT identifier_ns COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 24

   12 declaration: IDENT identifier_ns COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 25

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS . declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declaration_s)

    declaration_s  go to state 27
    declaration    go to state 13


State 26

   12 declaration: IDENT identifier_ns COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s . END_LOCALS BEGIN_BODY statement_ns END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   12 declaration: IDENT identifier_ns COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS . BEGIN_BODY statement_ns END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   12 declaration: IDENT identifier_ns COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 32


State 31

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY . statement_ns END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 42
    statement     go to state 43
    var           go to state 44


State 32

   12 declaration: IDENT identifier_ns COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 45


State 33

   17 statement: IF . bool_expr THEN $@3 statement SEMICOLON statement_ns else_ns ENDIF

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NOT      shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    bool_expr            go to state 54
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    rexpr                go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 34

   19 statement: WHILE . bool_expr BEGINLOOP $@4 statement SEMICOLON statement_ns ENDLOOP

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NOT      shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    bool_expr            go to state 61
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    rexpr                go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 35

   22 statement: DO . BEGINLOOP $@5 statement SEMICOLON statement_ns ENDLOOP WHILE $@6 bool_expr

    BEGINLOOP  shift, and go to state 62


State 36

   23 statement: FOREACH . IDENT IN IDENT BEGINLOOP statement SEMICOLON statement_ns ENDLOOP

    IDENT  shift, and go to state 63


State 37

   26 statement: CONTINUE .

    $default  reduce using rule 26 (statement)


State 38

   24 statement: READ . var var_ns

    IDENT  shift, and go to state 41

    var  go to state 64


State 39

   25 statement: WRITE . var var_ns

    IDENT  shift, and go to state 41

    var  go to state 65


State 40

   27 statement: RETURN . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 67
    multiplicative_expr  go to state 59
    term                 go to state 60


State 41

   28 var: IDENT .
   29    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 28 (var)


State 42

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns . END_BODY

    END_BODY  shift, and go to state 69


State 43

   10 statement_ns: statement . SEMICOLON statement_ns

    SEMICOLON  shift, and go to state 70


State 44

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

   12 declaration: IDENT identifier_ns COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 46

   42 rexpr: TRUE .

    $default  reduce using rule 42 (rexpr)


State 47

   43 rexpr: FALSE .

    $default  reduce using rule 43 (rexpr)


State 48

   44 rexpr: L_PAREN . bool_expr R_PAREN
   63 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NOT      shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    bool_expr            go to state 72
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    rexpr                go to state 57
    expression           go to state 73
    multiplicative_expr  go to state 59
    term                 go to state 60


State 49

   58 term: SUB . var
   60     | SUB . NUMBER
   62     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 75
    IDENT    shift, and go to state 41

    var  go to state 76


State 50

   40 relation_expr: NOT . rexpr

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    rexpr                go to state 77
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 51

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 52

   28 var: IDENT .
   29    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   64 term: IDENT . L_PAREN expression exp_s R_PAREN
   65     | IDENT . L_PAREN R_PAREN

    L_PAREN           shift, and go to state 78
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 28 (var)


State 53

   59 term: var .

    $default  reduce using rule 59 (term)


State 54

   17 statement: IF bool_expr . THEN $@3 statement SEMICOLON statement_ns else_ns ENDIF
   35 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 79
    OR    shift, and go to state 80


State 55

   36 bool_expr: relation_and_expr .
   37 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 81

    $default  reduce using rule 36 (bool_expr)


State 56

   38 relation_and_expr: relation_expr .

    $default  reduce using rule 38 (relation_and_expr)


State 57

   39 relation_expr: rexpr .

    $default  reduce using rule 39 (relation_expr)


State 58

   41 rexpr: expression . comp expression
   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83
    LT   shift, and go to state 84
    LTE  shift, and go to state 85
    GT   shift, and go to state 86
    GTE  shift, and go to state 87
    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89

    comp  go to state 90


State 59

   53 expression: multiplicative_expr .
   54 multiplicative_expr: multiplicative_expr . MULT term
   55                    | multiplicative_expr . DIV term
   56                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 53 (expression)


State 60

   57 multiplicative_expr: term .

    $default  reduce using rule 57 (multiplicative_expr)


State 61

   19 statement: WHILE bool_expr . BEGINLOOP $@4 statement SEMICOLON statement_ns ENDLOOP
   35 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 94
    OR         shift, and go to state 80


State 62

   22 statement: DO BEGINLOOP . $@5 statement SEMICOLON statement_ns ENDLOOP WHILE $@6 bool_expr

    $default  reduce using rule 20 ($@5)

    $@5  go to state 95


State 63

   23 statement: FOREACH IDENT . IN IDENT BEGINLOOP statement SEMICOLON statement_ns ENDLOOP

    IN  shift, and go to state 96


State 64

   24 statement: READ var . var_ns

    COMMA  shift, and go to state 97

    $default  reduce using rule 33 (var_ns)

    var_ns  go to state 98


State 65

   25 statement: WRITE var . var_ns

    COMMA  shift, and go to state 97

    $default  reduce using rule 33 (var_ns)

    var_ns  go to state 99


State 66

   63 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 100
    multiplicative_expr  go to state 59
    term                 go to state 60


State 67

   27 statement: RETURN expression .
   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 27 (statement)


State 68

   29 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 101
    multiplicative_expr  go to state 59
    term                 go to state 60


State 69

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_s $@2 END_PARAMS BEGIN_LOCALS declaration_s END_LOCALS BEGIN_BODY statement_ns END_BODY .

    $default  reduce using rule 6 (function)


State 70

   10 statement_ns: statement SEMICOLON . statement_ns

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 102
    statement     go to state 43
    var           go to state 44


State 71

   15 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 103
    multiplicative_expr  go to state 59
    term                 go to state 60


State 72

   35 bool_expr: bool_expr . OR relation_and_expr
   44 rexpr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 80
    R_PAREN  shift, and go to state 104


State 73

   41 rexpr: expression . comp expression
   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr
   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105
    ADD      shift, and go to state 82
    SUB      shift, and go to state 83
    LT       shift, and go to state 84
    LTE      shift, and go to state 85
    GT       shift, and go to state 86
    GTE      shift, and go to state 87
    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89

    comp  go to state 90


State 74

   62 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 106
    multiplicative_expr  go to state 59
    term                 go to state 60


State 75

   60 term: SUB NUMBER .

    $default  reduce using rule 60 (term)


State 76

   58 term: SUB var .

    $default  reduce using rule 58 (term)


State 77

   40 relation_expr: NOT rexpr .

    $default  reduce using rule 40 (relation_expr)


State 78

   64 term: IDENT L_PAREN . expression exp_s R_PAREN
   65     | IDENT L_PAREN . R_PAREN

    L_PAREN  shift, and go to state 66
    R_PAREN  shift, and go to state 107
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 108
    multiplicative_expr  go to state 59
    term                 go to state 60


State 79

   17 statement: IF bool_expr THEN . $@3 statement SEMICOLON statement_ns else_ns ENDIF

    $default  reduce using rule 16 ($@3)

    $@3  go to state 109


State 80

   35 bool_expr: bool_expr OR . relation_and_expr

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NOT      shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    relation_and_expr    go to state 110
    relation_expr        go to state 56
    rexpr                go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 81

   37 relation_and_expr: relation_and_expr AND . relation_expr

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NOT      shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    relation_expr        go to state 111
    rexpr                go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 82

   51 expression: expression ADD . multiplicative_expr

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    multiplicative_expr  go to state 112
    term                 go to state 60


State 83

   52 expression: expression SUB . multiplicative_expr

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    multiplicative_expr  go to state 113
    term                 go to state 60


State 84

   47 comp: LT .

    $default  reduce using rule 47 (comp)


State 85

   49 comp: LTE .

    $default  reduce using rule 49 (comp)


State 86

   48 comp: GT .

    $default  reduce using rule 48 (comp)


State 87

   50 comp: GTE .

    $default  reduce using rule 50 (comp)


State 88

   45 comp: EQ .

    $default  reduce using rule 45 (comp)


State 89

   46 comp: NEQ .

    $default  reduce using rule 46 (comp)


State 90

   41 rexpr: expression comp . expression

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 114
    multiplicative_expr  go to state 59
    term                 go to state 60


State 91

   54 multiplicative_expr: multiplicative_expr MULT . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var   go to state 53
    term  go to state 115


State 92

   55 multiplicative_expr: multiplicative_expr DIV . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var   go to state 53
    term  go to state 116


State 93

   56 multiplicative_expr: multiplicative_expr MOD . term

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var   go to state 53
    term  go to state 117


State 94

   19 statement: WHILE bool_expr BEGINLOOP . $@4 statement SEMICOLON statement_ns ENDLOOP

    $default  reduce using rule 18 ($@4)

    $@4  go to state 118


State 95

   22 statement: DO BEGINLOOP $@5 . statement SEMICOLON statement_ns ENDLOOP WHILE $@6 bool_expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement  go to state 119
    var        go to state 44


State 96

   23 statement: FOREACH IDENT IN . IDENT BEGINLOOP statement SEMICOLON statement_ns ENDLOOP

    IDENT  shift, and go to state 120


State 97

   34 var_ns: COMMA . var var_ns

    IDENT  shift, and go to state 41

    var  go to state 121


State 98

   24 statement: READ var var_ns .

    $default  reduce using rule 24 (statement)


State 99

   25 statement: WRITE var var_ns .

    $default  reduce using rule 25 (statement)


State 100

   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr
   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105
    ADD      shift, and go to state 82
    SUB      shift, and go to state 83


State 101

   29 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr

    R_SQUARE_BRACKET  shift, and go to state 122
    ADD               shift, and go to state 82
    SUB               shift, and go to state 83


State 102

   10 statement_ns: statement SEMICOLON statement_ns .

    $default  reduce using rule 10 (statement_ns)


State 103

   15 statement: var ASSIGN expression .
   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 15 (statement)


State 104

   44 rexpr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 44 (rexpr)


State 105

   63 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 106

   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr
   62 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123
    ADD      shift, and go to state 82
    SUB      shift, and go to state 83


State 107

   65 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 65 (term)


State 108

   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr
   64 term: IDENT L_PAREN expression . exp_s R_PAREN

    COMMA  shift, and go to state 124
    ADD    shift, and go to state 82
    SUB    shift, and go to state 83

    $default  reduce using rule 67 (exp_s)

    exp_s  go to state 125


State 109

   17 statement: IF bool_expr THEN $@3 . statement SEMICOLON statement_ns else_ns ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement  go to state 126
    var        go to state 44


State 110

   35 bool_expr: bool_expr OR relation_and_expr .
   37 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 81

    $default  reduce using rule 35 (bool_expr)


State 111

   37 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 37 (relation_and_expr)


State 112

   51 expression: expression ADD multiplicative_expr .
   54 multiplicative_expr: multiplicative_expr . MULT term
   55                    | multiplicative_expr . DIV term
   56                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 51 (expression)


State 113

   52 expression: expression SUB multiplicative_expr .
   54 multiplicative_expr: multiplicative_expr . MULT term
   55                    | multiplicative_expr . DIV term
   56                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 52 (expression)


State 114

   41 rexpr: expression comp expression .
   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 41 (rexpr)


State 115

   54 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 54 (multiplicative_expr)


State 116

   55 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 55 (multiplicative_expr)


State 117

   56 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 56 (multiplicative_expr)


State 118

   19 statement: WHILE bool_expr BEGINLOOP $@4 . statement SEMICOLON statement_ns ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement  go to state 127
    var        go to state 44


State 119

   22 statement: DO BEGINLOOP $@5 statement . SEMICOLON statement_ns ENDLOOP WHILE $@6 bool_expr

    SEMICOLON  shift, and go to state 128


State 120

   23 statement: FOREACH IDENT IN IDENT . BEGINLOOP statement SEMICOLON statement_ns ENDLOOP

    BEGINLOOP  shift, and go to state 129


State 121

   34 var_ns: COMMA var . var_ns

    COMMA  shift, and go to state 97

    $default  reduce using rule 33 (var_ns)

    var_ns  go to state 130


State 122

   29 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 29 (var)


State 123

   62 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 124

   66 exp_s: COMMA . expression exp_s

    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 49
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    expression           go to state 131
    multiplicative_expr  go to state 59
    term                 go to state 60


State 125

   64 term: IDENT L_PAREN expression exp_s . R_PAREN

    R_PAREN  shift, and go to state 132


State 126

   17 statement: IF bool_expr THEN $@3 statement . SEMICOLON statement_ns else_ns ENDIF

    SEMICOLON  shift, and go to state 133


State 127

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement . SEMICOLON statement_ns ENDLOOP

    SEMICOLON  shift, and go to state 134


State 128

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON . statement_ns ENDLOOP WHILE $@6 bool_expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 135
    statement     go to state 43
    var           go to state 44


State 129

   23 statement: FOREACH IDENT IN IDENT BEGINLOOP . statement SEMICOLON statement_ns ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement  go to state 136
    var        go to state 44


State 130

   34 var_ns: COMMA var var_ns .

    $default  reduce using rule 34 (var_ns)


State 131

   51 expression: expression . ADD multiplicative_expr
   52           | expression . SUB multiplicative_expr
   66 exp_s: COMMA expression . exp_s

    COMMA  shift, and go to state 124
    ADD    shift, and go to state 82
    SUB    shift, and go to state 83

    $default  reduce using rule 67 (exp_s)

    exp_s  go to state 137


State 132

   64 term: IDENT L_PAREN expression exp_s R_PAREN .

    $default  reduce using rule 64 (term)


State 133

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON . statement_ns else_ns ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 138
    statement     go to state 43
    var           go to state 44


State 134

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON . statement_ns ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 139
    statement     go to state 43
    var           go to state 44


State 135

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON statement_ns . ENDLOOP WHILE $@6 bool_expr

    ENDLOOP  shift, and go to state 140


State 136

   23 statement: FOREACH IDENT IN IDENT BEGINLOOP statement . SEMICOLON statement_ns ENDLOOP

    SEMICOLON  shift, and go to state 141


State 137

   66 exp_s: COMMA expression exp_s .

    $default  reduce using rule 66 (exp_s)


State 138

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_ns . else_ns ENDIF

    ELSE  shift, and go to state 142

    $default  reduce using rule 30 (else_ns)

    else_ns  go to state 143


State 139

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON statement_ns . ENDLOOP

    ENDLOOP  shift, and go to state 144


State 140

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON statement_ns ENDLOOP . WHILE $@6 bool_expr

    WHILE  shift, and go to state 145


State 141

   23 statement: FOREACH IDENT IN IDENT BEGINLOOP statement SEMICOLON . statement_ns ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 146
    statement     go to state 43
    var           go to state 44


State 142

   32 else_ns: ELSE . $@7 statement SEMICOLON statement_ns

    $default  reduce using rule 31 ($@7)

    $@7  go to state 147


State 143

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_ns else_ns . ENDIF

    ENDIF  shift, and go to state 148


State 144

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON statement_ns ENDLOOP .

    $default  reduce using rule 19 (statement)


State 145

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON statement_ns ENDLOOP WHILE . $@6 bool_expr

    $default  reduce using rule 21 ($@6)

    $@6  go to state 149


State 146

   23 statement: FOREACH IDENT IN IDENT BEGINLOOP statement SEMICOLON statement_ns . ENDLOOP

    ENDLOOP  shift, and go to state 150


State 147

   32 else_ns: ELSE $@7 . statement SEMICOLON statement_ns

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    statement  go to state 151
    var        go to state 44


State 148

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_ns else_ns ENDIF .

    $default  reduce using rule 17 (statement)


State 149

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON statement_ns ENDLOOP WHILE $@6 . bool_expr

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    SUB      shift, and go to state 49
    NOT      shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 52

    var                  go to state 53
    bool_expr            go to state 152
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    rexpr                go to state 57
    expression           go to state 58
    multiplicative_expr  go to state 59
    term                 go to state 60


State 150

   23 statement: FOREACH IDENT IN IDENT BEGINLOOP statement SEMICOLON statement_ns ENDLOOP .

    $default  reduce using rule 23 (statement)


State 151

   32 else_ns: ELSE $@7 statement . SEMICOLON statement_ns

    SEMICOLON  shift, and go to state 153


State 152

   22 statement: DO BEGINLOOP $@5 statement SEMICOLON statement_ns ENDLOOP WHILE $@6 bool_expr .
   35 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 80

    $default  reduce using rule 22 (statement)


State 153

   32 else_ns: ELSE $@7 statement SEMICOLON . statement_ns

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    FOREACH   shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 41

    $default  reduce using rule 9 (statement_ns)

    statement_ns  go to state 154
    statement     go to state 43
    var           go to state 44


State 154

   32 else_ns: ELSE $@7 statement SEMICOLON statement_ns .

    $default  reduce using rule 32 (else_ns)
